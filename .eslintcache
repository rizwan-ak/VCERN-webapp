[{"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/App.js":"1","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/routes.js":"2","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/redux/store/index.js":"3","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Landing.js":"4","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Tickets.js":"5","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/user/Settings.js":"6","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/organization/NewPool.js":"7","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/organization/ManageMembers.js":"8","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/vcern/AddBlog.js":"9","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/PaymentAgreements.js":"10","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/PaymentModal.js":"11","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/BlogCard.js":"12","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNDropdown.js":"13","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/MonthsSlider.js":"14","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/api.js":"15","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/Header.js":"16","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/organization/ManageGroups.js":"17","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/user/Register.js":"18","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNTextField.js":"19","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/index.js":"20","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/redux/actions/actionCreater.js":"21","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/ForgotPassword.js":"22","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/ResetPassword.js":"23","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Blogs.js":"24","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Events.js":"25","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/user/EditProfile.js":"26","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/organization/Dashboard.js":"27","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/vcern/ManageOrganizations.js":"28","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNTypography.js":"29","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/socketNotifications.js":"30","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/DashboardHeader.js":"31","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNConfirmationModal.js":"32","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/constants.js":"33","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/socketChat.js":"34","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Login.js":"35","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Messages.js":"36","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Profile.js":"37","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/user/Dashboard.js":"38","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/user/Documents.js":"39","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/organization/Register.js":"40","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/vcern/Dashboard.js":"41","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/helper.js":"42","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNLineChart.js":"43","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNModal.js":"44","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNAutocomplete.js":"45","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNAlert.js":"46","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Terms.js":"47","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Verify.js":"48","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/SingleBlog.js":"49","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/AllPools.js":"50","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/organization/Payments.js":"51","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/vcern/ManageAdmins.js":"52","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/vcern/Payments.js":"53","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNButton.js":"54","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/InfoCard.js":"55","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/data/index.js":"56","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNGroupAvatar.js":"57","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/FileMessage.js":"58","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNPieChart.js":"59","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/user/Payments.js":"60","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/icons.js":"61","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/utils/useWindowDims.js":"62","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/loader.js":"63","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/DocumentsList.js":"64","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/SelectPool.js":"65","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/OrganizationsList.js":"66","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/vcern/SingleOrganization.js":"67","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNImageUpload.js":"68","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/organization/Settings.js":"69"},{"size":1048,"mtime":1630589141457,"results":"70","hashOfConfig":"71"},{"size":7376,"mtime":1631123569225,"results":"72","hashOfConfig":"71"},{"size":482,"mtime":1630589142414,"results":"73","hashOfConfig":"71"},{"size":5317,"mtime":1630589142021,"results":"74","hashOfConfig":"71"},{"size":18004,"mtime":1631798821553,"results":"75","hashOfConfig":"71"},{"size":5149,"mtime":1630589142412,"results":"76","hashOfConfig":"71"},{"size":5176,"mtime":1630589142023,"results":"77","hashOfConfig":"71"},{"size":17309,"mtime":1630779458602,"results":"78","hashOfConfig":"71"},{"size":4879,"mtime":1630589142413,"results":"79","hashOfConfig":"71"},{"size":1949,"mtime":1630589142021,"results":"80","hashOfConfig":"71"},{"size":6469,"mtime":1630589141458,"results":"81","hashOfConfig":"71"},{"size":1470,"mtime":1630589141457,"results":"82","hashOfConfig":"71"},{"size":677,"mtime":1630589142018,"results":"83","hashOfConfig":"71"},{"size":2291,"mtime":1630589141458,"results":"84","hashOfConfig":"71"},{"size":20399,"mtime":1631741809469,"results":"85","hashOfConfig":"71"},{"size":12249,"mtime":1631149206349,"results":"86","hashOfConfig":"71"},{"size":4349,"mtime":1630590929078,"results":"87","hashOfConfig":"71"},{"size":25988,"mtime":1630592072265,"results":"88","hashOfConfig":"71"},{"size":690,"mtime":1630592130927,"results":"89","hashOfConfig":"71"},{"size":229,"mtime":1630589142020,"results":"90","hashOfConfig":"71"},{"size":18375,"mtime":1631742399855,"results":"91","hashOfConfig":"71"},{"size":3481,"mtime":1630589142020,"results":"92","hashOfConfig":"71"},{"size":2535,"mtime":1630589142022,"results":"93","hashOfConfig":"71"},{"size":3018,"mtime":1630589142020,"results":"94","hashOfConfig":"71"},{"size":1778,"mtime":1630589142020,"results":"95","hashOfConfig":"71"},{"size":19804,"mtime":1630589142412,"results":"96","hashOfConfig":"71"},{"size":5781,"mtime":1631742682280,"results":"97","hashOfConfig":"71"},{"size":4230,"mtime":1630589142413,"results":"98","hashOfConfig":"71"},{"size":633,"mtime":1630589142019,"results":"99","hashOfConfig":"71"},{"size":1294,"mtime":1630589142019,"results":"100","hashOfConfig":"71"},{"size":6540,"mtime":1630589141458,"results":"101","hashOfConfig":"71"},{"size":902,"mtime":1630589142018,"results":"102","hashOfConfig":"71"},{"size":722,"mtime":1630589142017,"results":"103","hashOfConfig":"71"},{"size":3043,"mtime":1630589142019,"results":"104","hashOfConfig":"71"},{"size":5082,"mtime":1630589142021,"results":"105","hashOfConfig":"71"},{"size":13724,"mtime":1630589142021,"results":"106","hashOfConfig":"71"},{"size":7473,"mtime":1631714188030,"results":"107","hashOfConfig":"71"},{"size":13727,"mtime":1631784580468,"results":"108","hashOfConfig":"71"},{"size":3855,"mtime":1630589142411,"results":"109","hashOfConfig":"71"},{"size":21512,"mtime":1630589142024,"results":"110","hashOfConfig":"71"},{"size":3396,"mtime":1630589142413,"results":"111","hashOfConfig":"71"},{"size":1297,"mtime":1630589142019,"results":"112","hashOfConfig":"71"},{"size":724,"mtime":1630589142018,"results":"113","hashOfConfig":"71"},{"size":802,"mtime":1630589142018,"results":"114","hashOfConfig":"71"},{"size":1025,"mtime":1630589142018,"results":"115","hashOfConfig":"71"},{"size":534,"mtime":1630589142017,"results":"116","hashOfConfig":"71"},{"size":1928,"mtime":1630589142022,"results":"117","hashOfConfig":"71"},{"size":3608,"mtime":1630589142022,"results":"118","hashOfConfig":"71"},{"size":2319,"mtime":1630589142022,"results":"119","hashOfConfig":"71"},{"size":10704,"mtime":1630589142020,"results":"120","hashOfConfig":"71"},{"size":5091,"mtime":1630589142024,"results":"121","hashOfConfig":"71"},{"size":9120,"mtime":1630589142413,"results":"122","hashOfConfig":"71"},{"size":4044,"mtime":1630589142413,"results":"123","hashOfConfig":"71"},{"size":1491,"mtime":1630589142018,"results":"124","hashOfConfig":"71"},{"size":2544,"mtime":1630589141458,"results":"125","hashOfConfig":"71"},{"size":4673,"mtime":1630589142017,"results":"126","hashOfConfig":"71"},{"size":431,"mtime":1630589142018,"results":"127","hashOfConfig":"71"},{"size":546,"mtime":1630589141458,"results":"128","hashOfConfig":"71"},{"size":1478,"mtime":1631107699122,"results":"129","hashOfConfig":"71"},{"size":11081,"mtime":1631740775507,"results":"130","hashOfConfig":"71"},{"size":5129,"mtime":1630589142019,"results":"131","hashOfConfig":"71"},{"size":706,"mtime":1631106373331,"results":"132","hashOfConfig":"71"},{"size":620,"mtime":1630589142019,"results":"133","hashOfConfig":"71"},{"size":877,"mtime":1630589141458,"results":"134","hashOfConfig":"71"},{"size":3591,"mtime":1630589142022,"results":"135","hashOfConfig":"71"},{"size":2560,"mtime":1630589141458,"results":"136","hashOfConfig":"71"},{"size":4609,"mtime":1630589142414,"results":"137","hashOfConfig":"71"},{"size":1085,"mtime":1630589142018,"results":"138","hashOfConfig":"71"},{"size":5367,"mtime":1630589142024,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"1isgtgx",{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"160"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"142"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"160"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"142"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"142"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"142"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"160"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"142"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"252"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"142"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"142"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/App.js",[],["296","297"],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/routes.js",["298"],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/redux/store/index.js",[],["299","300"],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Landing.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Tickets.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/user/Settings.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/organization/NewPool.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/organization/ManageMembers.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/vcern/AddBlog.js",[],["301","302"],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/PaymentAgreements.js",["303","304"],"import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { useHistory } from 'react-router';\nimport logo from '../common/assets/logos/blue.png';\nimport VCERNButton from '../common/elements/VCERNButton';\nimport VCERNTypography from '../common/elements/VCERNTypography';\n\nimport { tosList } from '../common/data';\n\nconst useStyles = makeStyles(theme => ({\n    logoBox: {\n        padding: '40px',\n        [theme.breakpoints.down('sm')]: { padding: '40px 0', display: 'flex', justifyContent: 'center' },\n    },\n\n    root: { margin: '0 auto', width: '60vw', [theme.breakpoints.down('sm')]: { width: '85vw' } },\n    logo: { height: 100, width: 100 },\n\n    listBox: { margin: '30px 0', alignSelf: 'center' },\n    list: { marginBottom: 10 },\n    buttonBox: { width: '100%', display: 'flex', justifyContent: 'space-between', margin: '30px 0' },\n}));\n\nexport default function PaymentAgreements() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <div>\n            <div className={classes.logoBox}>\n                <img src={logo} alt=\"logo\" className={classes.logo} />\n            </div>\n            <div className={classes.root}>\n                <VCERNTypography align=\"center\" variant=\"h3\" className={classes.logoText} value=\"Payment Terms & Agreements\" />\n                <ul className={classes.listBox}>\n                    {tosList.map((el, idx) => (\n                        <VCERNTypography key={idx} variant=\"body1\" component=\"li\" className={classes.list} value={el} />\n                    ))}\n                </ul>\n\n                {/* <div className={classes.buttonBox}>\n                    <VCERNButton fullWidth value=\"Decline\" color=\"secondary\" width=\"46%\" onClick={() => history.push('/login')} />\n                    <VCERNButton fullWidth value=\"Accept\" width=\"46%\" onClick={() => history.push('/login')} />\n                </div> */}\n            </div>\n        </div>\n    );\n}\n","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/PaymentModal.js",["305"],"import { Checkbox, Divider, makeStyles, Radio } from '@material-ui/core';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport AC from '../redux/actions/actionCreater';\nimport VCERNModal from './elements/VCERNModal';\nimport VCERNTypography from './elements/VCERNTypography';\n\nconst useStyles = makeStyles(theme => ({\n    boldText: { fontWeight: 'bold' },\n\n    divider: { margin: '15px 0' },\n    inline: { display: 'flex', justifyContent: 'space-between', alignItems: 'center' },\n    cardBox: { display: 'flex', alignItems: 'center' },\n\n    membershipText: { padding: 10, fontWeight: 'bold', boxShadow: '0 0 5px #888888', borderRadius: 5 },\n    remberMeContainer: { display: 'flex', alignItems: 'center', width: '100%' },\n    underline: { fontWeight: 'bold', margin: '20px 0', textDecoration: 'underline', cursor: 'pointer' },\n    card: { borderBottom: '2px solid #07A7E3', paddingBottom: 5, margin: '20px 10px' },\n}));\nfunction PaymentModal({ title, open, onClose, onConfirm, setError, userSubscriptionPrice, currentOrganization }) {\n    const classes = useStyles();\n    const history = useHistory();\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const [selectedCard, setSelectedCard] = useState(0);\n    const [agreedTerms, setAgreedTerms] = useState(false);\n\n    const handleSubmit = async evt => {\n        if (!(selectedCard === 999)) return onConfirm();\n        if (!agreedTerms) return setError('Please accept Terms & Conditions to proceed');\n        evt.preventDefault();\n        if (!stripe || !elements) return;\n\n        const cardElement = elements.getElement(CardElement);\n        const { error, paymentMethod } = await stripe.createPaymentMethod({ type: 'card', card: cardElement });\n\n        if (error) {\n            console.log('[error]', error);\n            setError(error.message);\n        } else {\n            // register({ ...data, payment_method: paymentMethod.id }, type, () => history.push('/verify'));\n            onConfirm();\n        }\n    };\n\n    return (\n        <VCERNModal title=\"Payment\" open={open} onClose={onClose} onConfirm={handleSubmit} buttonTittle={title}>\n            <div className={classes.inline}>\n                <VCERNTypography value=\"Yearly Membership\" className={classes.boldText} customColor=\"#657285\" />\n                <VCERNTypography value=\"Yearly Membership\" className={classes.membershipText} />\n            </div>\n            <Divider variant=\"fullWidth\" className={classes.divider} />\n            <VCERNTypography value=\"Summary\" variant=\"h6\" className={classes.boldText} />\n            <VCERNTypography value={`Once a year, you will be charged a $${userSubscriptionPrice}  membership fee by vCERN.`} variant=\"body2\" />\n            <VCERNTypography variant=\"body2\">\n                Additionally,\n                <VCERNTypography variant=\"body2\" color=\"primary\" component=\"span\" value={` ${currentOrganization?.name} `} />\n                will collect a contribution from you every time someone passes away in this pool. This contribution is determined by dividng the payout amount by the number of\n                people in this pool.\n            </VCERNTypography>\n            <VCERNTypography value=\" Your beneficiary will collect $20,000 in the event of your passing.\" variant=\"body1\" className={classes.boldText} />\n            <Divider variant=\"fullWidth\" className={classes.divider} />\n            <VCERNTypography value=\"Select card\" variant=\"h6\" className={classes.boldText} />\n            {[1, 1].map((el, idx) => (\n                <div key={idx} className={classes.cardBox}>\n                    <Radio checked={idx === selectedCard} onChange={() => setSelectedCard(idx)} />\n                    <VCERNTypography variant=\"body2\" value=\"**** **** **** 0000\" className={classes.boldText} customColor=\"#657285\" />\n                </div>\n            ))}\n            <div className={classes.cardBox}>\n                <Radio checked={selectedCard === 999} onChange={() => setSelectedCard(999)} />\n                <VCERNTypography variant=\"body2\" value=\"Add New Card\" className={classes.boldText} />\n            </div>\n            {selectedCard === 999 && (\n                <div>\n                    <CardElement\n                        className={classes.card}\n                        options={{\n                            iconStyle: 'solid',\n                            style: {\n                                base: {\n                                    fontSize: '16px',\n                                    fontSmoothing: 'antialiased',\n                                },\n                                invalid: {\n                                    iconColor: 'red',\n                                    color: 'red',\n                                },\n                            },\n                        }}\n                    />\n                    <div className={classes.remberMeContainer}>\n                        <Checkbox color=\"secondary\" value={agreedTerms} checked={agreedTerms} onChange={evt => setAgreedTerms(evt.target.checked)} />\n                        <VCERNTypography variant=\"body1\" className={classes.boldText}>\n                            By checking this box, you agree to the{' '}\n                            <VCERNTypography\n                                variant=\"body1\"\n                                color=\"secondary\"\n                                component=\"span\"\n                                className={classes.underline}\n                                value=\"Terms & Conditions\"\n                                onClick={() => history.push('/terms-and-conditions')}\n                            />{' '}\n                            and{' '}\n                            <VCERNTypography\n                                variant=\"body1\"\n                                component=\"span\"\n                                color=\"secondary\"\n                                className={classes.underline}\n                                value=\"Privacy Policy\"\n                                onClick={() => history.push('/payment-agreements')}\n                            />\n                        </VCERNTypography>\n                    </div>\n                </div>\n            )}\n        </VCERNModal>\n    );\n}\nexport default connect(state => state, { setError: AC.setError })(PaymentModal);\n","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/BlogCard.js",["306"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nimport VCERNTypography from './elements/VCERNTypography';\nimport { useHistory } from 'react-router-dom';\n\nimport { getFormattedDate } from '../common/helper';\n\nconst useStyles = makeStyles({\n    root: { maxWidth: 340 },\n    boldText: { fontWeight: 'bold' },\n    title: { fontWeight: 'bold', margin: '10px 0' },\n    body: { overflow: 'hidden', textOverflow: 'ellipsis', display: '-webkit-box', '-webkit-line-clamp': 3, '-webkit-box-orient': 'vertical' },\n});\n\nexport default function ImgMediaCard({ blog }) {\n    const { image, title, description } = blog;\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <Card className={classes.root} onClick={() => history.push('/blog', { ...blog })}>\n            <CardActionArea>\n                <CardMedia component=\"img\" alt=\"Blog Image\" height=\"250\" image={image} title={title} />\n                <CardContent>\n                    <VCERNTypography variant=\"h6\" className={classes.title} value={title} />\n                    <VCERNTypography variant=\"body2\" className={classes.body} value={description} />\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    );\n}\n","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNDropdown.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/MonthsSlider.js",["307","308","309"],"import React, { useEffect } from 'react';\nimport Slider from 'react-slick';\n\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { useState } from 'react';\nimport VCERNTypography from './elements/VCERNTypography';\nimport { months } from './data';\n\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core';\nimport { getCurrentMonth } from './helper';\n\nconst useStyles = makeStyles(theme => ({\n    activeMonth: { color: '#07A7E3', transform: 'scale(1.5)', fontWeight: 'bold' },\n    month: { color: '#657285' },\n}));\n\nexport default function MonthsSlider({ currentMonth, setCurrentMonth }) {\n    const classes = useStyles();\n\n    useEffect(() => {\n        setCurrentMonth(getCurrentMonth());\n    }, []);\n\n    const settings = {\n        className: 'center',\n        centerMode: true,\n        infinite: true,\n        centerPadding: '60px',\n        nextArrow: <Arrow position={'right'} />,\n        prevArrow: <Arrow position={'left'} />,\n        speed: 500,\n        slidesToShow: 5,\n        slidesToScroll: 1,\n        initialSlide: getCurrentMonth(),\n        responsive: [\n            { breakpoint: 1024, settings: { slidesToShow: 3, slidesToScroll: 3 } },\n            { breakpoint: 600, settings: { slidesToShow: 3, slidesToScroll: 3 } },\n            { breakpoint: 480, settings: { slidesToShow: 1, slidesToScroll: 1 } },\n        ],\n        afterChange: next => setCurrentMonth(next),\n    };\n\n    return (\n        <div>\n            <Slider {...settings}>\n                {months.map((el, idx) => (\n                    <VCERNTypography align=\"center\" variant=\"body1\" key={idx} value={el} className={idx === currentMonth ? classes.activeMonth : classes.month} />\n                ))}\n            </Slider>\n        </div>\n    );\n}\n\nfunction Arrow(props) {\n    const { className, style, onClick, position } = props;\n    const iconStyle = { color: '#07a7e3' };\n\n    return (\n        <div className={`${className} ${position === 'left' ? 'slider-left' : 'slider-right'}`} style={{ ...style, display: 'block' }} onClick={onClick}>\n            {position === 'left' ? <ChevronLeftIcon fontSize=\"large\" style={iconStyle} /> : <ChevronRightIcon fontSize=\"large\" style={iconStyle} />}\n        </div>\n    );\n}\n","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/api.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/Header.js",["310"],"import React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Container from \"@material-ui/core/Container\";\n\nimport VCERNTypography from \"./elements/VCERNTypography\";\nimport VCERNAvatar from \"./elements/VCERNAvatar\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport { connect } from \"react-redux\";\n\nimport icons from \"./icons\";\n\nimport AC from \"../redux/actions/actionCreater\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { Button, Menu, MenuItem } from \"@material-ui/core\";\n\nimport {\n  handleNotification,\n  join,\n  onJoin,\n  onUpdate,\n  onNewNotification,\n  disconnectSocket,\n} from \"../common/socketNotifications\";\nimport constants from \"./constants\";\nimport { timeDiffFromNow } from \"./helper\";\n\nimport { MembersMenu, vcernMenu, organizationsMenu } from \"./data\";\nimport PaymentModal from \"./PaymentModal\";\nimport VCERNAlert from \"./elements/VCERNAlert\";\n\nimport logoPic from \"./assets/logos/blue.png\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: { display: \"flex\" },\n  toolbar: { paddingRight: 24 },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    background: \"white\",\n    boxShadow: \"none\",\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: { marginRight: 36 },\n  menuButtonHidden: { display: \"none\" },\n  title: { flexGrow: 1 },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: { width: theme.spacing(9) },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: { flexGrow: 1, height: \"100vh\", overflow: \"auto\" },\n  container: {\n    padding: theme.spacing(4),\n    [theme.breakpoints.down(\"sm\")]: { padding: theme.spacing(1) },\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n\n  boldText: { fontWeight: \"bold\" },\n  displayPicture: {\n    height: 100,\n    width: 100,\n    marginBottom: 20,\n    borderRadius: 50,\n  },\n  infoBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: 20,\n  },\n\n  divider: { margin: \"15px 0\" },\n  notificationsTitle: { fontWeight: \"bold\", margin: \"10px 15px\" },\n  notificationsPicture: {\n    height: 50,\n    width: 50,\n    marginRight: 10,\n    borderRadius: 50,\n  },\n  clipedText: { whiteSpace: \"initial\", width: 250, fontWeight: \"bold\" },\n  notificationTextBox: { display: \"flex\", flexDirection: \"column\" },\n}));\n\nfunction Header({\n  children,\n  logout,\n  currentUser,\n  type,\n  joinPool,\n  token,\n  payEvent,\n  currentPageTitle,\n  currentOrganization,\n}) {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const [open, setOpen] = useState(true);\n  const [hideHeader, setHideHeader] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [notification, setNotification] = useState();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [showPaymentModal, setShowPaymentModal] = useState(false);\n\n  const [successMessage, setSuccessMessage] = useState(false);\n\n  const { _id, organization } = currentUser;\n\n  useEffect(() => {\n    join(\n      type === constants.USER_TYPE_VCERN ? \"vcern_admin\" : type,\n      _id,\n      organization\n    );\n    onJoin(setNotifications);\n    onUpdate();\n    onNewNotification(setNotifications);\n\n    return () => disconnectSocket();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    setHideHeader(location.pathname === \"/select-pool\");\n  }, [location.pathname]);\n\n  const handleLogout = () => {\n    logout();\n    history.push(\"/\");\n  };\n\n  const handleNotifiactionsClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleConfirmPayment = () => {\n    notification?.type === \"pool_invitation\"\n      ? joinPool(notification?.pool_invitation, token, () => {\n          setSuccessMessage(`Joined New Pool Successfully.`);\n          setShowPaymentModal(false);\n        })\n      : payEvent(notification?.event, token, () => {\n          setSuccessMessage(`Successfully Paid for the event.`);\n          setShowPaymentModal(false);\n        });\n  };\n\n  const handleMenuOption = (currentNotification) => {\n    setNotification(currentNotification);\n    const { type } = currentNotification;\n    setAnchorEl(null);\n    (type === \"pool_invitation\" || type === \"event\") &&\n      setShowPaymentModal(true);\n\n    // handle announcment type\n    // handleNotification();\n  };\n  useEffect(() => {\n    window.scrollY = 0;\n  }, [location.pathname]);\n  const renderMenu =\n    type === constants.USER_TYPE_MEMBER\n      ? MembersMenu\n      : type === constants.USER_TYPE_ORG\n      ? organizationsMenu\n      : vcernMenu;\n  console.log({ location });\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <div style={{ display: hideHeader ? \"none\" : \"flex\" }}>\n        <AppBar\n          position=\"absolute\"\n          className={clsx(classes.appBar, open && classes.appBarShift)}\n        >\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              aria-label=\"open drawer\"\n              onClick={() => setOpen(true)}\n              className={clsx(\n                classes.menuButton,\n                open && classes.menuButtonHidden\n              )}\n            >\n              {icons.menu}\n            </IconButton>\n            <VCERNTypography\n              variant=\"h6\"\n              noWrap\n              value={currentPageTitle}\n              className={classes.title}\n            />\n            {!(type === constants.USER_TYPE_VCERN) && (\n              <Button\n                color=\"primary\"\n                variant=\"outlined\"\n                onClick={() => history.push(\"/select-pool\")}\n              >\n                Change Pool\n              </Button>\n            )}\n            <IconButton color=\"inherit\" onClick={handleNotifiactionsClick}>\n              <Badge badgeContent={\" \"} color=\"secondary\">\n                {icons.notification}\n              </Badge>\n            </IconButton>\n            <Menu\n              anchorEl={anchorEl}\n              keepMounted\n              open={!!anchorEl}\n              onClose={() => setAnchorEl(null)}\n            >\n              {!!notifications.length ? (\n                <>\n                  <VCERNTypography\n                    variant=\"body1\"\n                    noWrap\n                    value=\"New\"\n                    className={classes.notificationsTitle}\n                  />\n                  {notifications.map((el, idx) => (\n                    <MenuItem onClick={() => handleMenuOption(el)} key={idx}>\n                      <VCERNAvatar\n                        src={el?.image}\n                        className={classes.notificationsPicture}\n                      >\n                        ?\n                      </VCERNAvatar>\n                      <div className={classes.notificationTextBox}>\n                        <VCERNTypography\n                          className={classes.clipedText}\n                          variant=\"body2\"\n                          value={`${el?.title}! ${el?.description}`}\n                        />\n                        <VCERNTypography\n                          variant=\"caption\"\n                          noWrap\n                          value={timeDiffFromNow(el.date)}\n                          customColor=\"#6F7F9F\"\n                        />\n                      </div>\n                    </MenuItem>\n                  ))}\n                  {/* <Divider variant=\"middle\" className={classes.divider} /> */}\n                </>\n              ) : (\n                <VCERNTypography\n                  variant=\"body1\"\n                  noWrap\n                  value=\"Nothing To Show\"\n                  className={classes.notificationsTitle}\n                />\n              )}\n            </Menu>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={() => setOpen(false)}>\n              {icons.right}\n            </IconButton>\n          </div>\n          {open && (\n            <>\n              {type === constants.USER_TYPE_VCERN ? (\n                <div className={classes.infoBox}>\n                  <VCERNAvatar\n                    src={logoPic}\n                    className={classes.displayPicture}\n                    alt={`VCERN Logo`}\n                  />\n                  <VCERNTypography\n                    variant=\"h5\"\n                    className={classes.boldText}\n                    value=\"vCERN\"\n                  />\n                  <VCERNTypography\n                    variant=\"caption\"\n                    customColor=\"#FE9900\"\n                    value=\"The Best Alternative to Life Insurance\"\n                  />\n                </div>\n              ) : (\n                <div className={classes.infoBox}>\n                  <VCERNAvatar\n                    src={currentOrganization?.image}\n                    className={classes.displayPicture}\n                    alt={`Organizations Name`}\n                  />\n                  <VCERNTypography\n                    variant=\"body2\"\n                    className={classes.boldText}\n                    value={currentOrganization?.name}\n                  />\n                </div>\n              )}\n            </>\n          )}\n          <Divider variant=\"middle\" />\n          <List>\n            {renderMenu.map((el, idx) => (\n              <ListItem key={idx} component=\"a\" href={el.href} button>\n                <ListItemIcon>{el.icon}</ListItemIcon>\n                <ListItemText primary={el.title} />\n              </ListItem>\n            ))}\n            <ListItem button onClick={handleLogout}>\n              <ListItemIcon>{icons.logout}</ListItemIcon>\n              <ListItemText primary=\"Logout\" />\n            </ListItem>\n          </List>\n        </Drawer>\n      </div>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {children}\n        </Container>\n      </main>\n      <PaymentModal\n        onClose={() => setShowPaymentModal(false)}\n        open={showPaymentModal}\n        onConfirm={handleConfirmPayment}\n        title={notification?.type === \"pool_invitation\" ? \"Join\" : \"Pay\"}\n      />\n      <VCERNAlert\n        message={successMessage}\n        onClose={() => setSuccessMessage(false)}\n        success={true}\n      />\n    </div>\n  );\n}\n\nexport default connect((state) => state, {\n  logout: AC.logout,\n  joinPool: AC.joinPool,\n  payEvent: AC.payEvent,\n})(Header);\n","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/organization/ManageGroups.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/user/Register.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNTextField.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/index.js",[],["311","312"],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/redux/actions/actionCreater.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/ForgotPassword.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/ResetPassword.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Blogs.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Events.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/user/EditProfile.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/organization/Dashboard.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/vcern/ManageOrganizations.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNTypography.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/socketNotifications.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/DashboardHeader.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNConfirmationModal.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/constants.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/socketChat.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Login.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Messages.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Profile.js",["313","314","315"],"import { Grid, makeStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\nimport VCERNTypography from \"../common/elements/VCERNTypography\";\nimport VCERNButton from \"../common/elements/VCERNButton\";\n\nimport { connect } from \"react-redux\";\nimport icons from \"../common/icons\";\nimport DashboardHeader from \"../common/DashboardHeader\";\nimport constants from \"../common/constants\";\nimport AC from \"../redux/actions/actionCreater\";\nimport { getFormattedDate } from \"../common/helper\";\nimport DocumentsList from \"../common/DocumentsList\";\nimport { useLocation } from \"react-router-dom\";\nimport VCERNModal from \"../common/elements/VCERNModal\";\nimport API from \"../common/api\";\nimport VCERNAlert from \"../common/elements/VCERNAlert\";\nimport VCERNTextField from \"../common/elements/VCERNTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  input: { margin: \"10px 0\" },\n  title: { margin: \"15px 0\", fontWeight: \"bold\" },\n  boldText: { fontWeight: \"500\" },\n  main: { margin: \"20px 0\", width: \"100%\" },\n  inline: { margin: \"10px 0 10px 10px\", display: \"flex\" },\n  icon: { marginRight: 15 },\n  docImage: { width: 125, height: 112.7 },\n  sendMessage: {\n    marginRight: 10,\n    [theme.breakpoints.down(\"md\")]: { marginBottom: 20 },\n  },\n  buttonsHolder: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    [theme.breakpoints.down(\"md\")]: {\n      flexDirection: \"column\",\n      alignItems: \"flex-start\",\n    },\n  },\n}));\n\nfunction Profile({\n  currentUser,\n  type,\n  setCurrentPageTitle,\n  fetchDocs,\n  token,\n  triggerNotification,\n}) {\n  const classes = useStyles();\n  const location = useLocation();\n\n  const [state, setstate] = useState({});\n  const [docs, setDocs] = useState([]);\n  const [messageModal, setMessageModal] = useState(false);\n  const [notificationModal, setNotificationModal] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    setCurrentPageTitle(`Member Profile`);\n    type === constants.USER_TYPE_MEMBER\n      ? setstate(currentUser)\n      : setstate(location.state.member);\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    state?._id && fetchDocs(state?._id, token, setDocs);\n\n    // eslint-disable-next-line\n  }, [state]);\n\n  const tagline = `${state?.address?.city}, ${state?.address?.state}`;\n  const name = `${state?.first_name} ${state?.last_name}`;\n  const phone = state?.phone;\n  const email = state?.email;\n  const address = `${state?.address?.apt ? state?.address?.apt + \", \" : \"\"}${\n    state?.address?.street_address\n  }, ${state?.address?.city}, ${state?.address?.state}`.trim();\n  const bName = `${state?.beneficiary?.first_name} ${state?.beneficiary?.last_name}`;\n  const bDob = state?.beneficiary?.dob;\n  const bPhone = state?.beneficiary?.phone;\n  const bAddress = `${\n    state?.beneficiary?.address?.apt\n      ? state?.beneficiary?.address?.apt + \", \"\n      : \"\"\n  }${state?.beneficiary?.address?.street_address}, ${\n    state?.beneficiary?.address?.city\n  }, ${state?.beneficiary?.address?.state}`.trim();\n  const onSendNotification = async () => {\n    await triggerNotification(\n      { description: message, title: \"Announcement\", members: [state._id] },\n      token,\n      () => {\n        setSuccessMessage(\"Notification Sent Successfully.\");\n      }\n    );\n    setMessage(\"\");\n    setNotificationModal(false);\n  };\n  return (\n    <Grid container>\n      <DashboardHeader title={name} subTitle={tagline} id={state?._id} />\n      <div className={classes.main}>\n        <div className={classes.buttonsHolder}>\n          <VCERNButton\n            startIcon={icons.notification}\n            value=\"Send a Notification\"\n            align=\"left\"\n            onClick={() => setNotificationModal(true)}\n          />\n        </div>\n        <div>\n          <VCERNTypography\n            className={classes.title}\n            variant=\"h6\"\n            value=\"Personal Info\"\n          />\n          <div className={classes.inline}>\n            <div className={classes.icon}>{icons.phone}</div>\n            <VCERNTypography\n              className={classes.boldText}\n              variant=\"body1\"\n              value={phone}\n            />\n          </div>\n          <div className={classes.inline}>\n            <div className={classes.icon}>{icons.email}</div>\n            <VCERNTypography\n              className={classes.boldText}\n              variant=\"body1\"\n              value={email}\n            />\n          </div>\n          <div className={classes.inline}>\n            <div className={classes.icon}>{icons.state}</div>\n            <VCERNTypography\n              className={classes.boldText}\n              variant=\"body1\"\n              value={address}\n            />\n          </div>\n        </div>\n\n        <div>\n          <VCERNTypography\n            className={classes.title}\n            variant=\"h6\"\n            value=\"Beneficiary Info\"\n          />\n          <div className={classes.inline}>\n            <div className={classes.icon}>{icons.profile}</div>\n            <VCERNTypography\n              className={classes.boldText}\n              variant=\"body1\"\n              value={bName}\n            />\n          </div>\n          <div className={classes.inline}>\n            <div className={classes.icon}>{icons.date}</div>\n            <VCERNTypography\n              className={classes.boldText}\n              variant=\"body1\"\n              value={getFormattedDate(bDob)}\n            />\n          </div>\n          <div className={classes.inline}>\n            <div className={classes.icon}>{icons.phone}</div>\n            <VCERNTypography\n              className={classes.boldText}\n              variant=\"body1\"\n              value={bPhone}\n            />\n          </div>\n          <div className={classes.inline}>\n            <div className={classes.icon}>{icons.state}</div>\n            <VCERNTypography\n              className={classes.boldText}\n              variant=\"body1\"\n              value={bAddress}\n            />\n          </div>\n\n          {state?.beneficiary?.email && (\n            <VCERNButton\n              target=\"_blank\"\n              href={`mailto:${state?.beneficiary?.email}`}\n              startIcon={icons.email}\n              value=\"Contact Beneficiary\"\n              align=\"left\"\n            />\n          )}\n          {/* <a href={state?.beneficiary?.email} target=\"_blank\" rel=\"noreferrer\">\n                            Contact Beneficiary\n                        </a> */}\n        </div>\n\n        <div>\n          <VCERNTypography\n            className={classes.title}\n            variant=\"h6\"\n            value=\"Documents\"\n          />\n          <DocumentsList docs={docs} />\n        </div>\n      </div>\n      <VCERNModal\n        title=\"Send a Notification\"\n        buttonTittle=\"Submit\"\n        open={notificationModal}\n        onClose={() => setNotificationModal(false)}\n        onConfirm={onSendNotification}\n      >\n        <VCERNTextField\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          placeholder=\"Enter the message for the notification\"\n        />\n      </VCERNModal>\n      <VCERNAlert\n        message={successMessage}\n        onClose={() => setSuccessMessage(false)}\n        success={true}\n      />\n    </Grid>\n  );\n}\nexport default connect((data) => data, {\n  setCurrentPageTitle: AC.setCurrentPageTitle,\n  fetchDocs: AC.fetchDocs,\n  triggerNotification: AC.triggerNotification,\n})(Profile);\n","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/user/Dashboard.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/user/Documents.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/organization/Register.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/vcern/Dashboard.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/helper.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNLineChart.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNModal.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNAutocomplete.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNAlert.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Terms.js",["316","317"],"import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { useHistory } from 'react-router';\nimport logo from '../common/assets/logos/blue.png';\nimport VCERNButton from '../common/elements/VCERNButton';\nimport VCERNTypography from '../common/elements/VCERNTypography';\n\nimport { tosList } from '../common/data';\n\nconst useStyles = makeStyles(theme => ({\n    logoBox: {\n        padding: '40px',\n        [theme.breakpoints.down('sm')]: { padding: '40px 0', display: 'flex', justifyContent: 'center' },\n    },\n\n    root: { margin: '0 auto', width: '60vw', [theme.breakpoints.down('sm')]: { width: '85vw' } },\n    logo: { height: 100, width: 100 },\n\n    listBox: { margin: '30px 0', alignSelf: 'center' },\n    list: { marginBottom: 10 },\n    buttonBox: { width: '100%', display: 'flex', justifyContent: 'space-between', margin: '30px 0' },\n}));\n\nexport default function Terms() {\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <div>\n            <div className={classes.logoBox}>\n                <img src={logo} alt=\"logo\" className={classes.logo} />\n            </div>\n            <div className={classes.root}>\n                <VCERNTypography align=\"center\" variant=\"h3\" className={classes.logoText} value=\"Terms of Services\" />\n                <ul className={classes.listBox}>\n                    {tosList.map((el, idx) => (\n                        <VCERNTypography key={idx} variant=\"body1\" component=\"li\" className={classes.list} value={el} />\n                    ))}\n                </ul>\n\n                {/* <div className={classes.buttonBox}>\n                    <VCERNButton fullWidth value=\"Decline\" color=\"secondary\" width=\"46%\" onClick={() => history.push('/login')} />\n                    <VCERNButton fullWidth value=\"Accept\" width=\"46%\" onClick={() => history.push('/login')} />\n                </div> */}\n            </div>\n        </div>\n    );\n}\n","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/Verify.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/SingleBlog.js",["318","319"],"import { Divider, makeStyles } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport VCERNAvatar from '../common/elements/VCERNAvatar';\nimport VCERNTypography from '../common/elements/VCERNTypography';\nimport { getFormattedDate } from '../common/helper';\nimport AC from '../redux/actions/actionCreater';\n\nconst useStyles = makeStyles(theme => ({\n    image: { width: '100%', height: 400, objectFit: 'contain' },\n    title: { fontWeight: 'bold', margin: '20px 0' },\n    boldText: { fontWeight: 'bold' },\n    inline: { display: 'flex', justifyContent: 'space-between' },\n    divider: { margin: '15px 0' },\n    body: { padding: '20px 0' },\n    underline: { fontWeight: 'bold', textDecoration: 'underline', color: '#FE9900' },\n}));\n\nfunction SingleBlog({ setCurrentPageTitle }) {\n    const classes = useStyles();\n    const location = useLocation();\n    const history = useHistory();\n\n    const [blog, setBlog] = useState({ author: '', date: '', description: '', image: '', link: '', title: '' });\n\n    const { author, date, description, image, link, title } = blog;\n\n    useEffect(() => {\n        setCurrentPageTitle(`${location?.state?.title}`);\n        location?.state?.title ? setBlog(location?.state) : history.push('/blogs');\n\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <div>\n            <img src={image} className={classes.image} />\n            <VCERNTypography variant=\"h3\" value={title} className={classes.title} />\n            <div className={classes.inline}>\n                <VCERNTypography variant=\"body1\" value={author} className={classes.boldText} customColor=\"#657285\" />\n                <VCERNTypography variant=\"body1\" value={getFormattedDate(date)} className={classes.boldText} customColor=\"#657285\" />\n            </div>\n            <Divider className={classes.divider} />\n            <VCERNTypography variant=\"body1\" value={description} className={classes.body} customColor=\"#657285\" />\n            <a className={classes.underline} href={link} target=\"_blank\" rel=\"noreferrer\">\n                Read More\n            </a>\n        </div>\n    );\n}\nexport default connect(state => state, { setCurrentPageTitle: AC.setCurrentPageTitle })(SingleBlog);\n","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/AllPools.js",[],["320","321"],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/organization/Payments.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/vcern/ManageAdmins.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/vcern/Payments.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNButton.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/InfoCard.js",["322"],"import { Grid, Paper, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport VCERNTypography from './elements/VCERNTypography';\nimport { getFormattedDate, getYearsfromNow } from './helper';\n\nconst useStyles = makeStyles(theme => ({\n    root: { padding: theme.spacing(2), display: 'flex', alignItems: 'center' },\n\n    imgBox: { position: 'relative' },\n    diedPersonPic: { height: 150, width: 150, marginRight: 15 },\n    diedPersonNameBox: {\n        position: 'absolute',\n        bottom: 5,\n        width: 150,\n        height: 60,\n        paddingTop: 10,\n        backgroundImage: `linear-gradient(rgba(0,0,0,0), rgba(18,41,77,0.8))`,\n    },\n    detailsBox: { width: '100%' },\n\n    boldText: { fontWeight: 'bold' },\n    divider: { height: 1, width: '100%', background: '#EBEEFA', margin: '5px 0' },\n}));\n\nexport default function InfoCard({ event }) {\n    const classes = useStyles();\n    const { complete, date, description, title, member_id } = event;\n    const { first_name, last_name, dob, image } = member_id;\n\n    return (\n        <Grid item xs={12} md={6} lg={4}>\n            <Paper className={classes.root}>\n                <div className={classes.imgBox}>\n                    <img src={image} alt=\"Died Person\" className={classes.diedPersonPic} />\n                    <div className={classes.diedPersonNameBox}>\n                        <VCERNTypography variant=\"body1\" align=\"center\" value={`${first_name} ${last_name}`} customColor=\"#fff\" className={classes.boldText} />\n                        <VCERNTypography variant=\"body2\" align=\"center\" value={`Was ${getYearsfromNow(dob)} Y. old`} customColor=\"#fff\" />\n                    </div>\n                </div>\n                <div className={classes.detailsBox}>\n                    <VCERNTypography variant=\"body2\" value=\"Date of Death:\" className={classes.boldText} />\n                    <VCERNTypography variant=\"body2\" value={getFormattedDate(date)} customColor=\"#6F7F9F\" />\n                    <div className={classes.divider} />\n                    <VCERNTypography variant=\"body2\" value=\"Place of Death:\" className={classes.boldText} />\n                    <VCERNTypography variant=\"body2\" value={description} customColor=\"#6F7F9F\" />\n                    <div className={classes.divider} />\n                    <VCERNTypography variant=\"body2\" value=\"Cause of Death:\" className={classes.boldText} />\n                    <VCERNTypography variant=\"body2\" value={title} customColor=\"#6F7F9F\" />\n                </div>\n            </Paper>\n        </Grid>\n    );\n}\n","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/data/index.js",[],["323","324"],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNGroupAvatar.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/FileMessage.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNPieChart.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/user/Payments.js",["325","326"],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/icons.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/utils/useWindowDims.js",["327","328"],"import React, { useEffect, useState } from \"react\";\n\nexport function useWindowDims() {\n  // Initialize state with undefined width/height so server and client renders match\n\n  const [windowDims, setWindowDims] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  const handleResize = () => {\n    setWindowDims((prev) => ({\n      ...prev,\n      width: window.innerWidth,\n      height: window.innerHeight,\n    }));\n  };\n\n  const handleChanges = () => {\n    handleResize();\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleChanges);\n\n    handleChanges();\n\n    return () => {\n      window.removeEventListener(\"resize\", handleChanges);\n    };\n  }, []);\n\n  return windowDims;\n}\n","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/loader.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/DocumentsList.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/SelectPool.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/OrganizationsList.js",["329","330","331","332"],"import { Divider, Grid, makeStyles, Paper, Table, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nimport VCERNTypography from './elements/VCERNTypography';\nimport VCERNAvatar from './elements/VCERNAvatar';\n\nimport { connect } from 'react-redux';\nimport AC from '../redux/actions/actionCreater';\nimport { TableBody } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    paper: { padding: theme.spacing(2), display: 'flex', flexDirection: 'column' },\n    title: { fontWeight: 'bold', marginBottom: 10 },\n    divider: { marginTop: 10 },\n    pic: { height: 40, width: 40, cursor: 'pointer' },\n}));\n\nfunction Dashboard({ fetchOrganizations, organizations, setCurrentOrganization, goToOrg }) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    useEffect(() => {\n        fetchOrganizations();\n    }, []);\n\n    useEffect(() => {\n        setCurrentOrganization(organizations[0]);\n    }, [organizations]);\n\n    const handleOrgClicked = org => {\n        setCurrentOrganization(org);\n        history.push(goToOrg ? '/organizations-history' : '/organization');\n    };\n    return (\n        <Grid item xs={12}>\n            <Paper className={classes.paper}>\n                <VCERNTypography variant=\"h6\" className={classes.title} value=\"Organizations\" />\n\n                <Table stickyHeader>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Image</TableCell>\n                            <TableCell>Name</TableCell>\n                            <TableCell>Members</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {organizations.map((el, idx) => (\n                            <TableRow key={idx}>\n                                <TableCell>\n                                    <VCERNAvatar className={classes.pic} src={el?.image} onClick={() => handleOrgClicked(el)} />\n                                </TableCell>\n                                <TableCell>{el?.name}</TableCell>\n                                <TableCell>{el?.number_of_members}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Paper>\n        </Grid>\n    );\n}\nexport default connect(state => state, { fetchOrganizations: AC.fetchOrganizations, setCurrentOrganization: AC.setCurrentOrganization })(Dashboard);\n","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/vcern/SingleOrganization.js",["333"],"import { Grid, makeStyles, Paper } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\n\nimport VCERNButton from '../../common/elements/VCERNButton';\n\nimport VCERNLineChart from '../../common/elements/VCERNLineChart';\nimport VCERNPieChart from '../../common/elements/VCERNPieChart';\nimport VCERNTypography from '../../common/elements/VCERNTypography';\n\nimport { connect } from 'react-redux';\nimport icons from '../../common/icons';\nimport DashboardHeader from '../../common/DashboardHeader';\nimport InfoCard from '../../common/InfoCard';\nimport AC from '../../redux/actions/actionCreater';\n\nconst minHeight = 300;\nconst useStyles = makeStyles(theme => ({\n    paper: { padding: theme.spacing(2), display: 'flex', flexDirection: 'column', minHeight: minHeight, maxHeight: '100%' },\n    title: { fontWeight: 'bold', marginTop: 10 },\n\n    continueButton: { margin: '10px 0' },\n    graphText: { fontWeight: 'bold', marginBottom: 10, textAlign: 'center' },\n\n    buttonBox: { width: '100%', textAlign: 'center' },\n    inviteText: { fontWeight: 'bold', marginTop: 10 },\n}));\n\nfunction Dashboard({ selectedPool, token, fetchStats, fetchPoolEvents, fetchPendingMembers, currentOrganization, setCurrentPageTitle }) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [stats, setStats] = useState(null);\n    const [events, setEvents] = useState([]);\n    const [pendingMembers, setPendingMembers] = useState([]);\n\n    useEffect(() => {\n        setCurrentPageTitle(`${currentOrganization?.name}`);\n        fetchPendingMembers(currentOrganization?._id, token, setPendingMembers);\n\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        fetchStats(selectedPool?._id, 'organization', token, setStats);\n        fetchPoolEvents(selectedPool?._id, token, setEvents);\n    }, [selectedPool]);\n\n    return (\n        <Grid container spacing={3}>\n            <DashboardHeader />\n            <Grid item xs={12} md={6}>\n                <Paper className={classes.paper}>\n                    <VCERNTypography variant=\"body1\" className={classes.graphText} value={`Total Members: ${stats?.number_of_members}`} />\n                    <VCERNPieChart\n                        data={[\n                            { name: 'Pending', value: stats?.number_of_pending, color: '#FE9900' },\n                            { name: 'Deceased', value: stats?.number_of_deceased, color: '#C90000' },\n                            { name: 'Active', value: stats?.number_of_active, color: '#1DD1A1' },\n                        ]}\n                    />\n                </Paper>\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <Paper className={classes.paper}>\n                    <VCERNTypography variant=\"body1\" className={classes.graphText} value=\"Financial Reports\" />\n                    <VCERNPieChart\n                        data={[\n                            { name: 'Raised', value: stats?.total_money, color: '#07A7E3' },\n                            { name: 'Delinquent', value: stats?.delinquent, color: '#035ED9' },\n                            { name: 'Balance', value: stats?.current_event_money, color: '#FE9900' },\n                        ]}\n                    />\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper className={classes.paper}>\n                    <VCERNTypography variant=\"body1\" className={classes.graphText} value=\"Waiting Pool status\" />\n                    <VCERNLineChart data={pendingMembers} />\n                </Paper>\n            </Grid>\n\n            {!!events.length && (\n                <>\n                    <VCERNTypography variant=\"h5\" className={classes.inviteText} value=\"Events Info\" />\n                    <Grid container spacing={3} style={{ margin: '20px 0' }}>\n                        {events.map((el, idx) => (\n                            <>{idx < 3 && <InfoCard key={idx} event={el} />}</>\n                        ))}\n                    </Grid>\n                    <Grid container spacing={3} style={{ margin: '0 0 20px 0', justifyContent: 'center' }}>\n                        <VCERNButton fullWidth startIcon={icons.eye} value=\"View All Events\" onClick={() => history.push('/events', events)} />\n                    </Grid>\n                </>\n            )}\n        </Grid>\n    );\n}\nexport default connect(state => state, {\n    fetchPoolEvents: AC.fetchPoolEvents,\n    fetchStats: AC.fetchStats,\n    fetchPendingMembers: AC.fetchPendingMembers,\n    setCurrentPageTitle: AC.setCurrentPageTitle,\n})(Dashboard);\n","/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/common/elements/VCERNImageUpload.js",[],"/Users/techtiesibrahim/Desktop/Code/vcern/VCERN-webapp/src/pages/organization/Settings.js",[],{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","replacedBy":"337"},{"ruleId":"338","severity":1,"message":"339","line":7,"column":3,"nodeType":"340","messageId":"341","endLine":7,"endColumn":14},{"ruleId":"334","replacedBy":"342"},{"ruleId":"336","replacedBy":"343"},{"ruleId":"334","replacedBy":"344"},{"ruleId":"336","replacedBy":"345"},{"ruleId":"338","severity":1,"message":"346","line":5,"column":8,"nodeType":"340","messageId":"341","endLine":5,"endColumn":19},{"ruleId":"338","severity":1,"message":"347","line":26,"column":11,"nodeType":"340","messageId":"341","endLine":26,"endColumn":18},{"ruleId":"338","severity":1,"message":"348","line":38,"column":24,"nodeType":"340","messageId":"341","endLine":38,"endColumn":37},{"ruleId":"338","severity":1,"message":"349","line":11,"column":10,"nodeType":"340","messageId":"341","endLine":11,"endColumn":26},{"ruleId":"338","severity":1,"message":"350","line":6,"column":10,"nodeType":"340","messageId":"341","endLine":6,"endColumn":18},{"ruleId":"338","severity":1,"message":"351","line":10,"column":8,"nodeType":"340","messageId":"341","endLine":10,"endColumn":14},{"ruleId":"352","severity":1,"message":"353","line":24,"column":8,"nodeType":"354","endLine":24,"endColumn":10,"suggestions":"355"},{"ruleId":"338","severity":1,"message":"356","line":29,"column":3,"nodeType":"340","messageId":"341","endLine":29,"endColumn":21},{"ruleId":"334","replacedBy":"357"},{"ruleId":"336","replacedBy":"358"},{"ruleId":"338","severity":1,"message":"359","line":16,"column":8,"nodeType":"340","messageId":"341","endLine":16,"endColumn":11},{"ruleId":"338","severity":1,"message":"360","line":56,"column":10,"nodeType":"340","messageId":"341","endLine":56,"endColumn":22},{"ruleId":"338","severity":1,"message":"361","line":56,"column":24,"nodeType":"340","messageId":"341","endLine":56,"endColumn":39},{"ruleId":"338","severity":1,"message":"346","line":5,"column":8,"nodeType":"340","messageId":"341","endLine":5,"endColumn":19},{"ruleId":"338","severity":1,"message":"347","line":26,"column":11,"nodeType":"340","messageId":"341","endLine":26,"endColumn":18},{"ruleId":"338","severity":1,"message":"362","line":6,"column":8,"nodeType":"340","messageId":"341","endLine":6,"endColumn":19},{"ruleId":"363","severity":1,"message":"364","line":39,"column":13,"nodeType":"365","endLine":39,"endColumn":58},{"ruleId":"334","replacedBy":"366"},{"ruleId":"336","replacedBy":"367"},{"ruleId":"338","severity":1,"message":"368","line":27,"column":13,"nodeType":"340","messageId":"341","endLine":27,"endColumn":21},{"ruleId":"334","replacedBy":"369"},{"ruleId":"336","replacedBy":"370"},{"ruleId":"371","severity":1,"message":"372","line":139,"column":24,"nodeType":"373","messageId":"374","endLine":139,"endColumn":26},{"ruleId":"371","severity":1,"message":"372","line":141,"column":17,"nodeType":"373","messageId":"374","endLine":141,"endColumn":19},{"ruleId":"338","severity":1,"message":"375","line":1,"column":8,"nodeType":"340","messageId":"341","endLine":1,"endColumn":13},{"ruleId":"352","severity":1,"message":"376","line":31,"column":6,"nodeType":"354","endLine":31,"endColumn":8,"suggestions":"377"},{"ruleId":"338","severity":1,"message":"378","line":1,"column":10,"nodeType":"340","messageId":"341","endLine":1,"endColumn":17},{"ruleId":"338","severity":1,"message":"350","line":2,"column":28,"nodeType":"340","messageId":"341","endLine":2,"endColumn":36},{"ruleId":"352","severity":1,"message":"379","line":25,"column":8,"nodeType":"354","endLine":25,"endColumn":10,"suggestions":"380"},{"ruleId":"352","severity":1,"message":"381","line":29,"column":8,"nodeType":"354","endLine":29,"endColumn":23,"suggestions":"382"},{"ruleId":"352","severity":1,"message":"383","line":47,"column":8,"nodeType":"354","endLine":47,"endColumn":22,"suggestions":"384"},"no-native-reassign",["385"],"no-negated-in-lhs",["386"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar",["385"],["386"],["385"],["386"],"'VCERNButton' is defined but never used.","'history' is assigned a value but never used.","'paymentMethod' is assigned a value but never used.","'getFormattedDate' is defined but never used.","'useState' is defined but never used.","'moment' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCurrentMonth'. Either include it or remove the dependency array. If 'setCurrentMonth' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["387"],"'handleNotification' is defined but never used.",["385"],["386"],"'API' is defined but never used.","'messageModal' is assigned a value but never used.","'setMessageModal' is assigned a value but never used.","'VCERNAvatar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["385"],["386"],"'complete' is assigned a value but never used.",["385"],["386"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'handleChanges'. Either include it or remove the dependency array.",["388"],"'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchOrganizations'. Either include it or remove the dependency array. If 'fetchOrganizations' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["389"],"React Hook useEffect has a missing dependency: 'setCurrentOrganization'. Either include it or remove the dependency array. If 'setCurrentOrganization' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["390"],"React Hook useEffect has missing dependencies: 'fetchPoolEvents', 'fetchStats', and 'token'. Either include them or remove the dependency array. If 'fetchStats' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["391"],"no-global-assign","no-unsafe-negation",{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},"Update the dependencies array to be: [setCurrentMonth]",{"range":"402","text":"403"},"Update the dependencies array to be: [handleChanges]",{"range":"404","text":"405"},"Update the dependencies array to be: [fetchOrganizations]",{"range":"406","text":"407"},"Update the dependencies array to be: [organizations, setCurrentOrganization]",{"range":"408","text":"409"},"Update the dependencies array to be: [fetchPoolEvents, fetchStats, selectedPool, token]",{"range":"410","text":"411"},[796,798],"[setCurrentMonth]",[677,679],"[handleChanges]",[945,947],"[fetchOrganizations]",[1030,1045],"[organizations, setCurrentOrganization]",[1874,1888],"[fetchPoolEvents, fetchStats, selectedPool, token]"]